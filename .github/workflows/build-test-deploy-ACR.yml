# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to ACR

on:
  workflow_dispatch:

env:
  ACR: vhacr
  ACR_RG: poc-rg
  CONTAINER_NAME: bsrs
  CONTAINER_TAG: latest
  JAR_FILE_NAME: rest.api.service
  ENV: dev


jobs:

  build_push_image:
    runs-on: ubuntu-latest

    permissions:
            contents: read
            id-token: write

    steps:
    - name: Azure Login
      uses: azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
    
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install -f pom.xml -DskipTests
      # run: mvn -B package --file pom.xml -DskipTests

      # --build-arg JAR_FILE=./target/*.jar open-0.0.1-SNAPSHOT.jar
    - name: build and push image to ACR
      run: |
        az acr build \
        --image ${{ env.ACR }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }} \
        --registry ${{ env.ACR }} \
        --build-arg JAR_FILE=./target/open-api-0.0.2-SNAPSHOT.jar \
        --build-arg ENV=${{ env.ENV }} \
        -g ${{ env.ACR_RG }} \
        -f ./dockerfiles/Dockerfile.dev .